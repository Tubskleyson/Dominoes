<!DOCTYPE html>
<html ondragover="event.preventDefault()" style="padding-right: 100px">
    <head>
        <meta charset="utf-8">
        <title>Bord</title>
        <link rel="stylesheet" href="/estilo/board.css">
    </head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.dev.js"></script>
    <script src="/scripts/engine/domino.js"></script>
    <script src="/scripts/engine/player.js"></script>
    <script src="/scripts/engine/game.js"></script>
    <script src="/scripts/engine/structures.js"></script>
    <script src="/scripts/chain.js"></script>
    <script src="/scripts/board.js"></script>
    <script src="/scripts/controller.js"></script>
    <body >

        <button id="comprar" onclick="comprar()">Comprar</button>
                
    </body>

    <script>

        var username = '<%= username %>'
        var sala = '<%= sala %>'

        var gamestate = [0]

        var owner = 0

        var players = []

        var socket = io.connect()

        var game

        function comprar(){

            game.buy()

        }

        function start() {

            console.log("[ MAIN ]  Iniciando jogo como dono da sala");
            

            

            for(let player of sala.membros) 
                players.push(new Player(player, sala.membros.indexOf(player)))

            game = new Controller(socket,players, sala.membros.indexOf(username))
            
        }

        socket

        .on('info', (info) => {

            console.log('[ MAIN ]  Recebendo informações da sala');
            

            owner = 1
            sala = info
            socket.sala = sala
            start()

        })

        .on('start', (info) => {
            

            if(!owner){

                console.log('[ MAIN ]  Iniciando jogo como membro');
                

                sala = info[0]
                let hands = info[1]
                let pile = info[2]


                for(let player of sala.membros) 
                    players.push(new Player(player, sala.membros.indexOf(player)))

                socket.sala = sala
                game = new Controller(socket,players, sala.membros.indexOf(username), hands, pile)



            }

        })

        .on('status', (sala)=>{

            if(sala.gamestate!=undefined && sala.gamestate.length > gamestate.length){
                
                console.log('[ MAIN ]  Atualizando status do jogo');
                
                
                let play = sala.gamestate[gamestate.length]
                gamestate = sala.gamestate
                
                

                if(players[play.player].nome != username){

                    console.log(`[ MAIN ]  Player ${username} salvando jogada feita por ${players[play.player].nome}`);

                    switch(play.tag){

                        case 'buy':

                            let domino = game.game.buy()

                            console.log(play.player+' comprou '+domino.value);

                            console.log("Mãod de "+game.game.player.nome+' : '+game.game.player.hand.toArray());
                            
                            

                            break



                        case 'play':

                            console.log(game.game.player.nome);

                            game.game.play(play.valor, play.ponta)

                            console.log(game.game.player.nome);
                            
                            
                            if(!play.ponta) 
                                game.chain.addHead(play.valor, play.rotation, play.match)
                            else 
                                game.chain.addTail(play.valor, play.rotation, play.match)
                            break
                        
                    }
                } 
            };
            

        })

        socket.emit('info', [sala, username])
        
        //var players = [dudu, dede]

        //var game = new Controller(players, id)
    </script>
</html>