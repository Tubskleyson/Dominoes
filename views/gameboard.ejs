<!DOCTYPE html>
<html ondragover="event.preventDefault()">
    <head>
        <meta charset="utf-8">
        <title>Bord</title>
        <link rel="stylesheet" href="/estilo/board.css">
    </head>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.dev.js"></script>
    <script src="/scripts/engine/domino.js"></script>
    <script src="/scripts/engine/player.js"></script>
    <script src="/scripts/engine/game.js"></script>
    <script src="/scripts/engine/structures.js"></script>
    <script src="/scripts/chain.js"></script>
    <script src="/scripts/board.js"></script>
    <script src="/scripts/controller.js"></script>
    <body >
                
    </body>

    <script>

        var username = '<%= username %>'
        var sala = '<%= sala %>'

        var gamestate = [0]

        var owner = 0

        var socket = io.connect()

        var game

        function start() {

            var players = []

            for(let player of sala.membros) 
                players.push(new Player(player, sala.membros.indexOf(player)))

            game = new Controller(socket,players, sala.membros.indexOf(username))
            
        }

        socket

        .on('info', (info) => {

            owner = 1
            sala = info
            socket.sala = sala
            start()

        })

        .on('start', (info) => {

            console.log(owner);
            

            if(!owner){

                sala = info[0]
                let hands = info[1]
                let pile = info[2]

                var players = []

                for(let player of sala.membros) 
                    players.push(new Player(player, sala.membros.indexOf(player)))

                socket.sala = sala
                game = new Controller(socket,players, sala.membros.indexOf(username), hands, pile)



            }

        })

        .on('status', (sala)=>{

            if(sala.gamestate!=undefined && sala.gamestate.length > gamestate.length){
                let play = sala.gamestate[gamestate.length]
                gamestate = sala.gamestate


                game.game.play(play.valor, play.ponta)
                
                if(!play.ponta) 
                    game.chain.addHead(play.valor, play.rotation, play.match)
                else 
                    game.chain.addTail(play.valor, play.rotation, play.match)
                
            };
            

        })

        socket.emit('info', [sala, username])
        
        //var players = [dudu, dede]

        //var game = new Controller(players, id)
    </script>
</html>